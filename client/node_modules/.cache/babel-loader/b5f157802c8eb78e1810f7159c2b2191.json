{"ast":null,"code":"var _jsxFileName = \"/Users/migueldacanay/Desktop/projects/int/brivity/react_coding_exercise/client/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { loginHandlr } from './handlrs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  isLoggedIn: false\n});\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  console.log(isLoggedIn);\n  const initialValues = {\n    isLoggedIn: isLoggedIn,\n    loginHandlr: () => loginHandlr(setIsLoggedIn)\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: initialValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/migueldacanay/Desktop/projects/int/brivity/react_coding_exercise/client/src/context/AuthContext.js"],"names":["React","createContext","useState","loginHandlr","AuthContext","isLoggedIn","AuthProvider","children","setIsLoggedIn","console","log","initialValues"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC;AACrCI,EAAAA,UAAU,EAAE;AADyB,CAAD,CAAjC;AAIP,OAAO,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACxC,QAAM,CAACF,UAAD,EAAaG,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEA,QAAMM,aAAa,GAAG;AAClBN,IAAAA,UAAU,EAAEA,UADM;AAElBF,IAAAA,WAAW,EAAE,MAAMA,WAAW,CAACK,aAAD;AAFZ,GAAtB;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,aAA7B;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useState } from 'react';\nimport { loginHandlr } from './handlrs';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n});\n\nexport const AuthProvider = ({children}) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    console.log(isLoggedIn);\n\n    const initialValues = {\n        isLoggedIn: isLoggedIn,\n        loginHandlr: () => loginHandlr(setIsLoggedIn),\n    };\n\n    return (\n        <AuthContext.Provider value={initialValues}>\n            {children}\n        </AuthContext.Provider>\n    )\n};  "]},"metadata":{},"sourceType":"module"}