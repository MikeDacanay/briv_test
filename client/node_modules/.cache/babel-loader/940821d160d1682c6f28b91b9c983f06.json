{"ast":null,"code":"import axios from \"axios\";\nexport const submitHandlr = async (e, isLogin) => {\n  try {\n    const post = await axios.post('http://localhost:5000/users/register', {\n      'email': 'email@email.com',\n      'password': 'password1'\n    }, {\n      headers: {\n        //headers\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(post);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nasync function tryCatchHandlr(promise) {\n  try {\n    const data = await promise;\n    return [data, null];\n  } catch (error) {\n    return [null, error];\n  }\n}","map":{"version":3,"sources":["/Users/migueldacanay/Desktop/projects/int/brivity/react_coding_exercise/client/src/components/AuthForm/handlrs.js"],"names":["axios","submitHandlr","e","isLogin","post","headers","console","log","err","tryCatchHandlr","promise","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,CAAP,EAAUC,OAAV,KAAsB;AAC9C,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACI,IAAN,CAAW,sCAAX,EACf;AACI,eAAS,iBADb;AAEI,kBAAY;AAFhB,KADe,EAKf;AAACC,MAAAA,OAAO,EAAE;AAAE;AACR,wBAAgB;AADV;AAAV,KALe,CAAnB;AAUAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAZD,CAYC,OAAMI,GAAN,EAAU;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AACJ,CAhBM;;AAkBP,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAClC,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMD,OAAnB;AAEA,WAAO,CAACC,IAAD,EAAO,IAAP,CAAP;AACH,GAJD,CAIC,OAAOC,KAAP,EAAa;AAEV,WAAO,CAAC,IAAD,EAAOA,KAAP,CAAP;AACH;AACJ","sourcesContent":["import axios from \"axios\";\n\nexport const submitHandlr = async (e, isLogin) => {\n    try {\n        const post = await axios.post('http://localhost:5000/users/register',\n            {\n                'email': 'email@email.com',\n                'password': 'password1'\n            },\n            {headers: { //headers\n                \"Content-Type\": \"application/json\",\n            }}, \n        );\n\n        console.log(post);\n    }catch(err){    \n        console.log(err);\n    }\n};\n\nasync function tryCatchHandlr(promise){\n    try{\n        const data = await promise;\n\n        return [data, null];\n    }catch (error){\n\n        return [null, error];\n    }\n} "]},"metadata":{},"sourceType":"module"}