{"ast":null,"code":"var _jsxFileName = \"/Users/migueldacanay/Desktop/projects/int/brivity/react_coding_exercise/client/src/components/AuthForm/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { submitHandlr } from \"./handlrs\";\nimport { Input } from \"../UI/Input\";\nimport { Button } from \"../UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthForm = props => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const authContxt = useContext(AuthContext);\n  const history = useHistory();\n  console.log(authContxt.errLogin);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AuthForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => submitHandlr(e, isLogin, authContxt, history),\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"email\",\n        label: \"Email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(Input, {\n        name: \"display_name\",\n        label: \"Username\",\n        type: \"text\",\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"submit\",\n        value: isLogin ? 'Login' : 'Create User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AuthForm__btn--containers\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AuthForm__btn--text\",\n        children: !isLogin ? 'Already have an account?' : 'Need to create a new account?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        clicked: () => setIsLogin(prevState => !prevState),\n        children: !isLogin ? 'Login with Existing Account' : 'Create a Free Account'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), authContxt.errLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: \"Wrong Account Info or Account Already Existed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthForm, \"aXMORf/fKp+rH0xd3nongvbdlps=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/migueldacanay/Desktop/projects/int/brivity/react_coding_exercise/client/src/components/AuthForm/index.jsx"],"names":["React","useState","useContext","useHistory","AuthContext","submitHandlr","Input","Button","AuthForm","props","isLogin","setIsLogin","authContxt","history","console","log","errLogin","e","prevState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,SAASC,YAAT,QAA6B,WAA7B;AAEA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAIA,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMW,UAAU,GAAGV,UAAU,CAACE,WAAD,CAA7B;AACA,QAAMS,OAAO,GAAGV,UAAU,EAA1B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACI,QAAvB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAGC,CAAD,IAAOZ,YAAY,CAACY,CAAD,EAAIP,OAAJ,EAAaE,UAAb,EAAyBC,OAAzB,CAAnC;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,QAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,cARJ,EAcK,CAACH,OAAD,iBAAY,QAAC,KAAD;AACT,QAAA,IAAI,EAAC,cADI;AAET,QAAA,KAAK,EAAC,UAFG;AAGT,QAAA,IAAI,EAAC,MAHI;AAIT,QAAA,WAAW,EAAC,UAJH;AAKT,QAAA,QAAQ;AALC;AAAA;AAAA;AAAA;AAAA,cAdjB,eAoBI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAEA,OAAO,GAAG,OAAH,GAAa;AAF/B;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAyBI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBACK,CAACA,OAAD,GAAW,0BAAX,GAAuC;AAD5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAMC,UAAU,CAAEO,SAAD,IAAe,CAACA,SAAjB,CAD7B;AAAA,kBAEK,CAACR,OAAD,GAAW,6BAAX,GAA0C;AAF/C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,EAkCKE,UAAU,CAACI,QAAX,iBAAuB;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlC5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CA3CM;;GAAMR,Q;UAGOL,U;;;KAHPK,Q","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nimport { submitHandlr } from \"./handlrs\";\n\nimport { Input } from \"../UI/Input\";\nimport { Button } from \"../UI/Button\";\n\n\n\nexport const AuthForm = props => {\n    const [isLogin, setIsLogin] = useState(true);\n    const authContxt = useContext(AuthContext);\n    const history = useHistory();\n    console.log(authContxt.errLogin);\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={(e) => submitHandlr(e, isLogin, authContxt, history)}>\n                <Input\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    placeholder='Email'\n                    required\n                />\n                <Input\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required/>\n                {!isLogin && <Input\n                    name=\"display_name\"\n                    label=\"Username\"\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    required/>}                \n                <Input\n                    type='submit'\n                    value={isLogin ? 'Login' : 'Create User'}/>            \n            </form>\n            <div className=\"AuthForm__btn--containers\">\n                <div className=\"AuthForm__btn--text\">\n                    {!isLogin ? 'Already have an account?': 'Need to create a new account?'}\n                </div>\n                <Button\n                    clicked={() => setIsLogin((prevState) => !prevState)}>\n                    {!isLogin ? 'Login with Existing Account': 'Create a Free Account'}\n                </Button>\n            </div>\n            {authContxt.errLogin && <div className=\"\">Wrong Account Info or Account Already Existed</div>}            \n        </div>\n    )\n}; "]},"metadata":{},"sourceType":"module"}